import Customer from "../models/customer.model.js";
import { template } from "../libs/template_generator.js"
import puppeteer from 'puppeteer'
import wkhtmltopdf from 'wkhtmltopdf'
import fs from 'fs';
import path from 'path'

export const createCustomer = async (req, res) => {
    const {fname,lname,email,address,profession,revenue} = req.body

    try {
        const regexData = new RegExp(/^(\w+\s?)*$/)
        if(!regexData.test(lname)){
            res.status(400).json({message: 'Special characters are not allowed'});
        }else{
            const newCustomer = new Customer({
                fname,
                lname,
                email,
                address,
                profession,
                revenue
            })
            const saveCustomer = await newCustomer.save()
            res.json({message:"Customer created"})
        }

    } catch (error) {
        res.status(500).json({message: 'Internal server error'});
    }
}

export const updateCustomer = async (req, res) => {
    const customerId = req.params.id
    try {
        const customer = await Customer.findByIdAndUpdate(customerId,req.body,{new: true})
       if (!customer){
           res.status.json({ message: 'Customer not found' });
       }
       res.status(204).json({ message: 'ok' })
    } catch (error) {
        res.status(500).json({message: 'Internal server error' });
        console.log(error.stack)
    }
}

export const deleteCustomer = async (req, res) => {
    const customerId = req.params.id
    try {
        const customer = await Customer.findByIdAndDelete(customerId)
       if (!customer){
           res.status(404).json({ message: 'Customer not found' });
       }
       res.status(204).json({ message: 'ok' })
    } catch (error) {
        res.status(500).json({message: 'Internal server error' });
    }
}

export const getCustomers = async (req, res) => {
    const {query} = req.query
    try {
        if (query === null || !query){
            const customer = await Customer.find().select('email fname lname')
            console.log(customer)
            res.json(customer)
        }
        else{
            const customer = await Customer.findById(query);
            console.log(customer)
            res.json(customer);
        }
        
        
        //const customer = await Customer.find({$or: [{ lname: query },{ email: query },{_id: query}]});
        

    } catch (error) {
        console.log(error.stack)
        return res.status(500).json({ message: 'Internal server error' })
    }    
}

export const exportData = async (req, res) => {
    const {email} = req.query
    try {
        /*
        const browser = await puppeteer.launch();
        const page = await browser.newPage();
        const customer = await Customer.findOne({email});
        const htmlContent = template(customer);
        console.log(customer.email)
        await page.setContent(htmlContent, { waitUntil: 'networkidle2' });

        const pdf = await page.pdf({ format: 'A4' });

        await browser.close();

        res.contentType('application/pdf');
        res.send(pdf);
        */
        
        const customer = await Customer.findOne({email});
        const htmlContent = template(customer);
        await wkhtmltopdf(htmlContent).pipe(res);


    } catch (error) {
        return res.status(500).json({ message: 'Internal server error' })
    }
}

