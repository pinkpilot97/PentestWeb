import React, {useEffect} from 'react';
import { useForm } from 'react-hook-form';
import { useAuth } from '../context/AuthContext'
import {MdOutlineKeyboardArrowRight} from "react-icons/md";
import {useNavigate, useParams} from 'react-router-dom'

const PasswordResetToken = () => {
    const {passwordReset, authError} = useAuth()
    const navigate = useNavigate()
    const {register, handleSubmit,  formState: { errors }, setValue} = useForm();
    const params = useParams()

    const onSubmit = handleSubmit(async (data) => {
      passwordReset(data)
      console.log(data)
      navigate('/login')
    })
  return (
    <div className="flex w-full justify-center px-3 py-20 h-screen " >
    <div className='bg-zinc-600 max-w-md w-full p-10 rounded-md'>
      <h1 className='text-4xl font-bold text-white'>Create your new password</h1>
      <p className='text-white'>Type your password below</p>
      <form className="mt-10" onSubmit={onSubmit}>
        {
            authError.map((error, i) => (
              <div className='flex bg-red-500 px-1 py-1 text-white rounded-md'>
                {error}
              </div>
            ))
        }
        <input
        className='w-full bg-zinc-500 text-white px-4 py-2 rounded-md my-2'
        type="password" 
        {...register("password", { required: true })}
        placeholder='Passoword'
        />
        {errors.email && <p className='text-red-500'>passoword is required</p>}
        <input
        className='w-full bg-zinc-500 text-white px-4 py-2 rounded-md my-2'
        type="password" 
        {...register("password", { required: true })}
        placeholder='Confirm Passoword'
        />
        {errors.email && <p className='text-red-500'>passoword confirm is required</p>}
        <input type='hidden' value={params.token} {...register("tokenReq")}/>
        <input type='hidden' value={params.id} {...register("userId")}/>
        <button className='text-white w-fit px-6 py-3
                my-2 flex items-center rounded-md bg-gradient-to-r from-sky-600 via-sky-400 to-sky-300 cursor-pointer'>
                  Send
                  <span className='group-hover:rotate-90 duration-300'>
                    <MdOutlineKeyboardArrowRight size={25} className="ml-1 "/>
                  </span>
          </button>
      </form>
    </div>
  </div>
  );
};

export default PasswordResetToken;