import React, {useEffect} from 'react';
import { useForm } from 'react-hook-form';
import {useAdmin} from "../context/AdminContext"
import {MdOutlineKeyboardArrowRight} from "react-icons/md";
import {useNavigate, useParams} from 'react-router-dom'

const GetUsers = () => {
  const {sendRequest, getUserReq, updateUserReq} = useAdmin()
  const {register, handleSubmit,  formState: { errors }, setValue} = useForm();
  const navigate = useNavigate()
  const params = useParams()

  useEffect(() => {
    async function getUserData(){
      if(params.id){
        const user = await getUserReq(params.id)
        setValue('username',user.username)
        setValue('email',user.email)
        setValue('role',user.role)
      }
    }
    getUserData()
  }, [])

  const onSubmit = handleSubmit(async (data) => {
    if(params.id){
      console.log(data)
      updateUserReq(params.id, data)
    } else {
      sendRequest(data)
      console.log(data)
    }
    navigate('/admin/users')
  })
  return (
    <div className="flex w-full justify-center px-3 py-20 h-screen " >
    <div className='bg-zinc-600 max-w-md w-full p-10 rounded-md'>
      <h1 className='text-4xl font-bold text-white'>Create User</h1>
      <form className="mt-10" onSubmit={onSubmit}>
        <input
        className='w-full bg-zinc-500 text-white px-4 py-2 rounded-md my-2'
        type="text"
        {...register("username", { required: true })}
        placeholder='Username'
        />
        {errors.username && <p className='text-red-500'>username is required</p>}
        <input
        className='w-full bg-zinc-500 text-white px-4 py-2 rounded-md my-2'
        type="email" 
        {...register("email", { required: true })}
        placeholder='Email'
        />
        {errors.email && <p className='text-red-500'>email is required</p>}

        <input
        className='w-full bg-zinc-500 text-white px-4 py-2 rounded-md my-2'
        type="password" 
        {...register("password", { required: true })}
        placeholder='Password'
        />
        {errors.password && <p className='text-red-500'>password is required</p>}
        <input
        className='w-full bg-zinc-500 text-white px-4 py-2 rounded-md my-2'
        type="text"
        {...register("role", { required: true })}
        placeholder='Role'
        />
        {errors.role && <p className='text-red-500'>role is required</p>}
        <button className='text-white w-fit px-6 py-3
              my-2 flex items-center rounded-md bg-gradient-to-r from-sky-600 via-sky-400 to-sky-300 cursor-pointer'>
                Send
                <span className='group-hover:rotate-90 duration-300'>
                  <MdOutlineKeyboardArrowRight size={25} className="ml-1 "/>
                </span>
        </button>
      </form>
    </div>
  </div>
  );
};

export default GetUsers;